#include <stdio.h>
#include <stdlib.h>
#include "app.h"
#include "../mscom_base/mscom.h"

int get_version(int fd)
{
    int err;
    project_version_t *ver;

    UpdataPacket_t packet, reply;
    err = create_packet(&packet, GET_VERSION_CMD, NULL, 0);
    if (err != 0)
    {
        printf("create packet for cmd %d failed.\n", GET_VERSION_CMD);
        return -1;
    }

    dump_packet(&packet);

    err = send_packet(fd, &packet);
    if (err != 0)
    {
        printf("send packet to mcu failed.\n");
        return -1;
    }

    err = rcv_packet(fd, &reply);
    if (err != 0)
    {
        printf("rcv packet failed.\n");
        return -1;
    }

    ver = (project_version_t *)reply.data;

    printf("hardware: %s\n", ver->hardware);
    printf("software: %s\n", ver->software);
    printf("buildtime: %s\n", ver->buildtime);

    return 0;
}

typedef enum {
    COM1 = 0,
    COM2,
    COM3,
    COM4,

    COM_MAX
}COM_NO;

typedef enum {
    COM_ROLE_SLAVE = 0,
    COM_ROLE_MASTER,

    COM_ROLE_MAX
}COM_ROLE;

#define USART_MPORT_MAX (4)
#define IP_BUF_LEN (4)
typedef struct port_config_item
{
    unsigned char com;
    unsigned char role;
    unsigned char peer[IP_BUF_LEN];
    unsigned short port;
}port_config_item_t;

static void show_service_config(port_config_item_t *item)
{
    unsigned int i;

    printf("\r\n\t COM \t role \t  peer \t port \r\n");

    for (i = 0; i < COM_MAX; i++)
    {
        printf("\t COM%d \t %s \t %d.%d.%d.%d \t %d\r\n", 
                item[i].com + 1, 
                (item[i].role == COM_ROLE_SLAVE) ? "S" : "M",
                item[i].peer[0], item[i].peer[1], item[i].peer[2], item[i].peer[3],
                item[i].port);
    }
}

int get_service_config(int fd)
{
    int err;
    port_config_item_t *config;
    UpdataPacket_t packet, reply;

    err = create_packet(&packet, GET_SERVICE_CMD, NULL, 0);
    if (err != 0)
    {
        printf("create packet for cmd %d failed.\n", GET_SERVICE_CMD);
        return -1;
    }
    
    err = send_packet(fd, &packet);
    if (err != 0)
    {
        printf("send packet to mcu failed.\n");
        return -1;
    }

    err = rcv_packet(fd, &reply);
    if (err != 0)
    {
        printf("rcv packet failed.\n");
        return -1;
    }

    dump_packet(&reply);

    config = (port_config_item_t *)reply.data;

    show_service_config(config);
    
    return 0;
}


int clear_service_config(int fd)
{
    int err;
    UpdataPacket_t packet;

    err = create_packet(&packet, RESET_SERVICE_CMD, NULL, 0);
    if (err != 0)
    {
        printf("create packet for cmd %d failed.\n", GET_SERVICE_CMD);
        return -1;
    }
     
    return 0;
}
